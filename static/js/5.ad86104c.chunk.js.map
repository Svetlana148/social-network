{"version":3,"sources":["utils/Validators/validators.js","components/FormsControls/FormsControls.module.css","components/FormsControls/FormsControls.js","components/hoc/withAuthRedirect.js","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Message/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["required","value","maxLengthCreator","maxLength","length","concat","module","exports","Textarea","_ref","input","meta","props","haveError","touched","error","React","createElement","className","s","formControl","Object","assign","Element","_ref3","typeElement","createForm","placeholder","name","validate","component","arguments","undefined","text","Field","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","render","this","Navigate","to","connect","DialogItem","path","id","dialog","active","NavLink","avatar","src","alt","Message","message","maxLength50","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Dialogs","dialogsElements","dialogsPage","dialogsData","map","d","messagesElement","messagesData","m","dialogs","dialogsItems","messages","values","addMessage","newMessageText","compose","dispatch","addMessageActionCreator"],"mappings":"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","file":"static/js/5.ad86104c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nexport const required = value => {\r\n\tif (value) return undefined;\r\n\treturn \"Field is required\";\r\n}\r\n\r\n\r\nexport const maxLengthCreator = (maxLength) => (value )=> {\r\n\tif (value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n\treturn undefined;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__1sLW_\",\"error\":\"FormsControls_error__Mmyin\",\"formSummaryError\":\"FormsControls_formSummaryError__3xloe\"};","import React from 'react';\r\nimport s from './FormsControls.module.css';\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\n\r\n\r\n//Container for Textarea---------------------------------------------\r\nexport const Textarea = ({input, meta, ...props}) =>{\r\n\tlet haveError = meta.touched && meta.error;\r\n\treturn (\r\n\t\t<div className={s.formControl + \" \" + (haveError ? s.error : \" \")}>\r\n\t\t\t<div>\r\n\t\t\t\t<textarea {...input} {...props}/>\r\n\t\t\t</div>\r\n\t\t\t\t{ haveError && <span>{meta.error}</span>}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\n//Container for Input---------------------------------------------\r\nexport const Input = ({input, meta, ...props}) =>{\r\n\tlet haveError = meta.touched && meta.error;\r\n\treturn (\r\n\t\t<div className={s.formControl + \" \" + (haveError ? s.error : \" \")}>\r\n\t\t\t<div>\r\n\t\t\t\t<input {...input} {...props}/>\r\n\t\t\t</div>\r\n\t\t\t\t{ haveError && <span>{meta.error}</span>}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n//Container Universal  for Input and Textarea---------------------------------------------\r\n\r\nexport const Element = ({input, meta, ...props}) =>{\r\n\tlet haveError = meta.touched && meta.error;\r\n\r\n\treturn (\r\n\t\t<div className={s.formControl + \" \" + (haveError ? s.error : \" \")}>\r\n\t\t\t<div>\r\n\t\t\t\t<props.typeElement {...input} {...props} />\r\n\t\t\t</div>\r\n\t\t\t\t{ haveError && <span>{meta.error}</span>}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\nexport const createForm = (placeholder, name, validate, component, typeElement, props={}, text=\"\") =>(\r\n\t<div>\r\n\t<Field placeholder={placeholder} name={name}  validate={validate} \r\n\tcomponent={component} typeElement = {typeElement} {...props}/>{text}\r\n\t</div> \r\n)\r\n\r\n","import React from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport {connect} from 'react-redux';\r\n\r\n\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state)=>({\r\n\tisAuth : state.auth.isAuth\r\n});\r\n\r\n\r\n\r\n\r\n\r\nexport const withAuthRedirect = (Component)=>{\r\n\t// check Login ---------------------------------\r\n\tclass RedirectComponent extends React.Component{\r\n\t\trender() {\r\n\t\t\tif (!this.props.isAuth) return <Navigate to={(\"/Login\")}/>\r\n\t\t\treturn <Component {...this.props} />\r\n\t\t}\r\n\t}\r\n\t// provide pice of State ------------------------------------------------------------\r\n\tlet ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n\r\n\treturn ConnectedAuthRedirectComponent;\r\n}\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3Ql83\",\"dialogsItems\":\"Dialogs_dialogsItems__2J4az\",\"active\":\"Dialogs_active__379j0\",\"messages\":\"Dialogs_messages__3dz7k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"DialogItem_dialogs__1lC1n\",\"dialogsItems\":\"DialogItem_dialogsItems__3QVTa\",\"active\":\"DialogItem_active__Rhz1L\",\"avatar\":\"DialogItem_avatar__kZokw\",\"messages\":\"DialogItem_messages__xdafC\"};","import React from \"react\";\r\nimport s from \"./DialogItem.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst DialogItem = (props) => {\r\n\tlet path = '/Dialogs/' + props.id;\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className={s.dialog + ' ' + s.active}>\r\n\t\t\t\t<NavLink to={path}>\r\n\t\t\t\t\r\n\t\t\t\t\t<img className={s.avatar} src=\"https://cspromogame.ru//storage/upload_images/avatars/1299.jpg\" alt=\"\" />\r\n\t\t\t\t\r\n\t\t\t\t\t{props.name} \r\n\t\t\t\t</NavLink>\r\n\t\t\t\t\t\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n// ---------------------------------------------------------------\r\n\r\n\r\n\r\n\r\nexport default DialogItem;","import React from \"react\";\r\n// import s from \"./Message.module.css\";\r\n\r\n\r\nconst Message=(props)=>{\r\n\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t<div className=\"message\">\r\n\t\t\t\t{props.message}\r\n\t\t\t</div>\r\n\r\n\t\t\t\r\n\t\t</div>\r\n\r\n\t)\r\n}\r\n\r\n\r\n\r\nexport default Message;","import React from \"react\";\r\n// import s from \"./Message.module.css\";\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { required} from '../../../../utils/Validators/validators';\r\nimport { Textarea} from '../../../FormsControls/FormsControls';\r\nimport { maxLengthCreator} from '../../../../utils/Validators/validators';\r\n\r\n\r\n\r\nconst maxLength50 =  maxLengthCreator(50);\r\n\r\n\r\n\r\nexport const AddMessageForm = (props) =>{\r\n\treturn(\r\n\t\t<form onSubmit ={props.handleSubmit}>\r\n\t\t\t<div>\r\n\t\t\t\t<Field component={Textarea} \r\n\t\t\t\t\t\tname={\"newMessageText\"} \r\n\t\t\t\t\t\tvalidate={[ required, maxLength50]}\r\n\t\t\t\t\t\tplaceholder={\"Enter your message\"}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div>\r\n\t\t\t\t<button>Send</button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t);\r\n}\r\n\r\n// export default AddMessageForm;","import React from \"react\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport DialogItem from \"./DialogItem/DialogItem.jsx\";\r\nimport Message from \"./Message/Message.jsx\";\r\n\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { AddMessageForm } from \"./Message/AddMessageForm/AddMessageForm.jsx\";\r\n\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n// addMessage-----------------------------------------\r\n// Redux-Form---------------------------------------------\r\nlet addNewMessage=(values)=>{\r\n\tprops.addMessage(values.newMessageText);\r\n};\r\n// ----------------------------------------------------------------------------\r\n\r\n\tlet dialogsElements = props.dialogsPage.dialogsData.map(d => <DialogItem name={d.name} id={d.id} />);\r\n\tlet messagesElement = props.dialogsPage.messagesData.map(m => <Message message = {m.message} />);\r\n\r\n//   Check LOGIN-----------------------------------\r\n\r\n\r\nif (!props.isAuth) return <Navigate to={(\"/Login\")}/>\r\n\r\n\r\n//-----------------------------------\r\n\r\n\treturn (\r\n\t\t<div className={s.dialogs}>\r\n\t\t\t<div className={s.dialogsItems}>\r\n\t\t\t\t{dialogsElements}\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className={s.messages}>\r\n\t\t\t\t<div>{messagesElement}</div>\r\n\r\n\r\n\t\t\t\t<div><AddMessageFormRedux onSubmit={addNewMessage}/></div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n// ---Redux-Form-----------------------------------------------------------------------\r\n\r\n// const AddMessageForm = (props) =>{\r\n// \treturn(\r\n// \t\t<form onSubmit ={props.handleSubmit}>\r\n// \t\t\t<div>\r\n// \t\t\t\t<Field component={\"textarea\"} \r\n// \t\t\t\t\t\tname={\"newMessageText\"} \r\n// \t\t\t\t\t\tplaceholder={\"Enter your message\"}>\r\n// \t\t\t\t</Field>\r\n// \t\t\t\t{/* <textarea \r\n// \t\t\t\t\tonChange={onMessageChange} \r\n// \t\t\t\t\tvalue={props.newMessageText} \r\n// \t\t\t\t\tplaceholder={\"Enter your message\"}/> */}\r\n// \t\t\t</div>\r\n\r\n// \t\t\t<div>\r\n// \t\t\t\t<button>Send</button>\r\n// \t\t\t</div>\r\n// \t\t</form>\r\n// \t);\r\n// }\r\n\r\nconst AddMessageFormRedux=reduxForm({\r\n\tform : \"dialogAddMessageForm\"\r\n})(AddMessageForm)\r\n\r\n\r\n\r\n\r\n// --------------------------------------------------------------------------\r\n\r\n\r\n\r\nexport default Dialogs;","import { updateNewMessageTextActionCreator, addMessageActionCreator } from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { connect } from \"react-redux\";\r\nimport { withAuthRedirect } from \"../hoc/withAuthRedirect.js\";\r\nimport { compose } from \"redux\";\r\n\r\n\r\n\r\n\r\n\r\n// -----------------------------------------------------------------------------------------------------------\r\nlet mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tdialogsPage: state.dialogsPage,\r\n\t}\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\t// updateNewMessageText : (text)=>{\r\n\t\t// \tlet action = updateNewMessageTextActionCreator(text);\r\n\t\t// \tdispatch(action);\r\n\t\t// },\r\n\r\n\t\taddMessage: (newMessageText) => {\r\n\t\t\tdispatch(addMessageActionCreator(newMessageText));\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// hoc---------------------------------------------------\r\n\r\nexport default compose(\r\n\tconnect(mapStateToProps, mapDispatchToProps),\r\n\twithAuthRedirect\r\n)(Dialogs);\r\n"],"sourceRoot":""}