{"version":3,"file":"static/js/258.ef864301.chunk.js","mappings":"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","sources":["webpack://react_4_lesson/./src/components/Users/Users.module.css?b9d0","webpack://react_4_lesson/./src/components/Users/User.module.css?05eb","components/Users/User.tsx","redux/users-selectors.tsx","components/Users/UserSearchForm.tsx","components/Users/Users.tsx","components/Users/UsersContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"UserSearchForm\":\"Users_UserSearchForm__BeBxo\",\"wrapper\":\"Users_wrapper__ulbtJ\",\"pagination\":\"Users_pagination__COUwZ\",\"usersPhoto\":\"Users_usersPhoto__LOyX1\",\"usersList\":\"Users_usersList__3Mkd9\"};","// extracted by mini-css-extract-plugin\nexport default {\"userCard\":\"User_userCard__oyLZ1\",\"userPhoto\":\"User_userPhoto__fOk2K\",\"userCardText\":\"User_userCardText__vG5RK\",\"userCardStatus\":\"User_userCardStatus__1Q9F4\"};","/** Renders 1 user for User page*/\r\nimport React from 'react';\r\n// import styles from './Users.module.css';\r\nimport userPhoto from '../../img/UserUnknown1.png';\r\nimport {NavLink} from  'react-router-dom';\r\nimport { UserType } from '../../types/types';\r\nimport s from './User.module.css';\r\n\r\n\r\ntype PropsType = {\r\n\tuser: UserType\r\n\tfollowingInProgress:  Array<number>\r\n\tfollow : (userId: number) => void\r\n\tunfollow : (userId: number) => void\r\n}\r\n\r\n/** Display 1 user for User page*/\r\nlet User: React.FC<PropsType> = ({user, followingInProgress, follow, unfollow})=>{\r\nreturn (\r\n\t\r\n\t\t<div className={s.userCard}>\r\n\t\t\t<NavLink to = {'/profile/' +user.id}>\r\n\t\t\t{/* userPhoto - default photo */}\r\n\t\t\t\t<img src={user.photos.small !=null ? user.photos.small : userPhoto} className={s.userPhoto} alt=\"\" />\r\n\t\t\t\t<div className={s.userCardName}>{user.name}</div>\r\n\t\t\t</NavLink>\r\n\r\n\t\t\t<div className={s.userCardText}>\r\n\t\t\t\t<div className={s.userCardStatus}>\r\n\t\t\t\t\t<b>Status:</b>&nbsp;{user.status}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={s.userFollow}>\r\n\t\t\t\t\t{user.followed \r\n\t\t\t\t\t\r\n\t\t\t\t\t? <button disabled={followingInProgress.some(id => id === user.id)} \r\n\t\t\t\t\t\t\t\t\tonClick={()=>{unfollow(user.id);\r\n\t\t\t\t\t}}>\r\n\r\n\r\n\t\t\t\t\tunfollow</button> \r\n\t\t\t\t\t: <button disabled={followingInProgress.some(id => id === user.id)} onClick={()=>{follow(user.id);\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\tfollow</button>\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\t\t\t\r\n\t\t</div>\r\n\t\r\n\t)\r\n};\r\n\r\nexport default User;\r\n","/** Selectors accept the all \"State\" and get data for User page */\r\nimport {createSelector} from 'reselect'; \r\nimport { AppStateType } from '../redux/redux-store';\r\n\r\n/** Typify \"getUsersSelector\" with (state : AppStateType) */\r\nexport const getUsersSelector= (state : AppStateType) => {\r\n\treturn state.usersPage.users;\r\n}\r\n\r\n/** get users based on filters */\r\nexport const getUsers = createSelector(getUsersSelector, (users) => {\r\n\treturn users.filter(u => true);\r\n})\r\n\r\n/** get number of users on page */\r\nexport const getPageSize = (state : AppStateType) => {\r\n\treturn state.usersPage.pageSize;\r\n}\r\n\r\n/** get the total number of users taking into account filters */\r\nexport const getTotalUsersCount = (state : AppStateType) => {\r\n\treturn state.usersPage.totalUsersCount;\r\n}\r\n\r\n/**  get current page number*/\r\nexport const getCurrentPage = (state : AppStateType) => {\r\n\treturn state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state : AppStateType) => {\r\n\treturn state.usersPage.isFetching;\r\n}\r\n\r\n/**  does the \"follow - unfollow\" state switched*/\r\nexport const getFollowingInProgress = (state : AppStateType) => {\r\n\treturn state.usersPage.followingInProgress;\r\n}\r\n\r\n/** get filters applied to users */\r\nexport const getUsersFilter = (state : AppStateType) => {\r\n\treturn state.usersPage.filter;\r\n}\r\n\r\n","/** Filters for User page */\r\nimport React from 'react';\r\nimport { SubmitErrorHandler, SubmitHandler, useForm } from 'react-hook-form';\r\nimport { FilterType } from '../../redux/users-reducer';\r\nimport { useSelector } from 'react-redux';\r\nimport { getUsersFilter } from '../../redux/users-selectors';\r\n\r\n/** (2. UserSearchForm \"onSubmit\" (function \"requestUsers (formData from Redux))\" (1. UserSearchForm \"Form\"))) */\r\n\r\n\r\n/** FilterType - What data does the form collect (what the user enters)*/\r\n\r\n/** What do we pass to the function with the form (and we pass the handler function)*/\r\ntype UserSearchFormPropsType = {  \r\n\tonFilterChanged : (filter: FilterType) => void\r\n}\r\n\r\n\r\ntype FriendFormType =   \r\n\t\"true\" | \"false\" | \"null\"\r\n\r\n\r\n/** What types will be in \"Submit\"-е (not FilterType)*/\r\ntype FormType = {  \r\n\tterm : string,\r\n\tfriend: FriendFormType\r\n}\r\n\r\n\r\n/**  1. Main component with form*/\r\n\r\nconst UserSearchForm: React.FC <UserSearchFormPropsType> = (props) => {\r\n\r\n/** We get the previously entered value of \"filter\" and then it is in \"initialState\"*/\r\nconst filter = useSelector(getUsersFilter)\r\n\r\n\r\n\t/** \"useForm\" Generik */\r\n\tconst { register, handleSubmit, formState: { errors } } = useForm<FormType>({\r\n\t\tdefaultValues: {              \r\n\t\t\tterm: filter.term,\r\n\t\t\tfriend: String(filter.friend) as FriendFormType\r\n\t\t}\r\n\t})\r\n\r\n\tconst submit : SubmitHandler<FormType > = (formData) =>{ //Ф-ция обработки поиска User-а\r\n\t\tconst filter:FilterType = {\r\n\t\t\tterm: formData.term,\r\n\t\t\tfriend: formData.friend === 'null' ? null    :     formData.friend === 'true' ? true     :    false\r\n\t\t}\r\n\t\tprops.onFilterChanged(filter);\r\n\t}\r\n\t\r\n\tconst error : SubmitErrorHandler<FilterType> = data =>{\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<form onSubmit={handleSubmit(submit, error)}> \r\n\r\n\r\n\t\t\t\t{/* error indicating in which field it was made. */}\r\n\t\t\t\t{/* {error && <div className={style.formSummaryError}>\r\n\t\t\t\t\t{error}\r\n\t\t\t\t</div>} */}\r\n\t\t\t\t<div>\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t{/* Form fields */}\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<b>User Search</b> : <input type='input' {...register('term', \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{maxLength:  {value: 20, message: ' exceeds 20 symbols'}})} />\r\n\t\t\t\t\t<div style={{padding: \"10px\", display:\"inline-block\"}}> \r\n\t\t\t\t\t\t{/* select field---------------------------------------------*/}\r\n\t\t\t\t\t\t<select {...register(\"friend\")}>\r\n\t\t\t\t\t\t<option value=\"null\">All</option>\r\n\t\t\t\t\t\t<option value=\"true\">Only followed</option>\r\n\t\t\t\t\t\t<option value=\"false\">Only unfollowed</option>\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t</div>\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\t<button>Search</button>\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nexport default UserSearchForm","/** Displays a list of UUsers*/\r\nimport React, { FC, useEffect } from 'react';\r\nimport s from './Users.module.css';\r\nimport User from './User';\r\nimport UserSearchForm from './UserSearchForm';\r\nimport { FilterType, requestUsers, follow, unfollow } from '../../redux/users-reducer';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getCurrentPage, getFollowingInProgress, getPageSize, getTotalUsersCount, getUsers, getUsersFilter } from '../../redux/users-selectors';\r\nimport { AppDispatch } from '../../redux/redux-store';\r\nimport { useNavigate, useSearchParams, useLocation} from 'react-router-dom';\r\nimport { Content } from 'antd/es/layout/layout';\r\nimport { ConfigProvider, Pagination } from 'antd';\r\n\r\n\r\nexport const Users: FC = () => {\r\n\r\n\t/**\"useSelector( our selector)\" to get data from state\t */\r\n\tconst users = useSelector(getUsers)\r\n\tconst totalUsersCount = useSelector(getTotalUsersCount)\r\n\tconst pageSize = useSelector(getPageSize)\r\n\tconst currentPage = useSelector(getCurrentPage)\r\n\tconst filter = useSelector(getUsersFilter)\r\n\tconst followingInProgress = useSelector(getFollowingInProgress)\r\n\r\n\t//TYPE CAST for \"UseDispatch\" due to Redux changes---\r\n\t/** \"useDispatch( our thunk/action)\" to dispatch in state\t*/\r\n\tconst dispatch: AppDispatch = useDispatch()\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\t/** At the first load we take data from the \"URL\" */\r\n\t\tlet term=searchParams.get('term');\r\n\t\tlet friend=searchParams.get('friend');\r\n\t\tlet page=searchParams.get('page');\r\n\r\n\t\tlet actualPage = currentPage\r\n      let actualFilter = filter\r\n\r\n      if (!!page) actualPage = Number(page)\r\n\r\n\r\n      if (!!term) actualFilter = {...actualFilter, term: term as string}\r\n\r\n      switch(friend) {\r\n            case \"null\":\r\n               actualFilter = {...actualFilter, friend: null}\r\n               break;\r\n            case \"true\":\r\n               actualFilter = {...actualFilter, friend: true}\r\n               break;\r\n            case \"false\":\r\n               actualFilter = {...actualFilter, friend: false}\r\n               break;\r\n      }\r\n\r\n\t\t/** Request of \"User\"*/\r\n\t\tdispatch(requestUsers(actualPage, pageSize, actualFilter))\r\n\t}, [])\r\n\r\n\r\n\tlet navigate = useNavigate();\r\n\t// let params = useParams(); //Creates an Object from a \"URL\"\r\n\t//We do synchronization when \"filter\" arrives. \r\n\t//The \"URL\" string is formed from: \"filter.term\", \"filter.friend\", \"currentPage\"\r\n\r\n\tuseEffect(() => {\r\n\t\tnavigate(`/users?term=${filter.term}&friend=${filter.friend}&page=${currentPage}`);\r\n\r\n\t}, [navigate, filter.friend, filter.term, currentPage])\r\n\r\n\r\n\r\n\r\n\t//When loading, it receives an initial set of \"Users\"\r\n\t//\"useEffect\" - synchronize\r\n\t//instead of \"ComponentDidMount\" use \"useEffect\"\r\n\t\r\n\tlet location = useLocation();\r\n\tconst [searchParams] = useSearchParams(location.search);\r\n\r\n\t\r\n\r\n\tconst onPageChanged = (numberPage: number) => {\r\n\t\t/** \"requestUsers\" - it is a Thunk-Creator( subspecies  ActionCreator-а). You can't just call it, you can only \"dispatch\" it.*/\r\n\t\tdispatch(requestUsers(numberPage, pageSize, filter));\r\n\t}\r\n\r\n\tconst onFilterChanged = (filter: FilterType) => {\r\n\t\t/** Calls the function to query \"User\"s and change \"filter\"s\r\n\t\t * \"currentPage\" =1 if the filter has changed */\r\n\t\tdispatch(requestUsers(1, pageSize, filter)); \r\n\t}\r\n\r\n\tconst UI_follow = (userId: number) => {\r\n\t\tdispatch(follow(userId));\r\n\t}\r\n\r\n\tconst UI_unfollow = (userId: number) => {\r\n\t\tdispatch(unfollow(userId));\r\n\t}\r\n\t//------------------------------------------------------------------------------------------------------------------------\r\n\r\n\tconst contentStyle: React.CSSProperties = {\r\n\t\ttextAlign: 'center',\r\n\t\tminHeight: 120,\r\n\t\t// lineHeight: '120px',\r\n\t\t// backgroundColor: '#fff',\r\n\t\tborderRadius: 13,\r\n\t\tpadding: '30px 24px',\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Content style={contentStyle}>\r\n\t\t\t\t<div className={s.wrapper}>\r\n\r\n\t\t\t\t\t<div className={s.UserSearchForm}>\r\n\t\t\t\t\t\t<UserSearchForm onFilterChanged={onFilterChanged} />\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<ConfigProvider\r\n\t\t\t\t\t\ttheme={{\r\n\t\t\t\t\t\t\tcomponents: {\r\n\t\t\t\t\t\t\t\tPagination: {\r\n\t\t\t\t\t\t\t\t\titemActiveBg: '#e2e4f9',\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<div className={s.pagination}>\r\n\t\t\t\t\t\t\t\t<Pagination defaultCurrent={currentPage} \r\n\t\t\t\t\t\t\t\t\t\t\t\ttotal={totalUsersCount}\r\n\t\t\t\t\t\t\t\t\t\t\t\tpageSize={pageSize} \r\n\t\t\t\t\t\t\t\t\t\t\t\tshowSizeChanger={false}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={onPageChanged}/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</ConfigProvider>\r\n\t\t\t\t\t</div>\r\n\r\n\r\n\t\t\t\t\t<div className={s.usersList}>\r\n\t\t\t\t\t\t{users.map(u => <User user={u}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfollowingInProgress={followingInProgress}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={u.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfollow={UI_follow}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tunfollow={UI_unfollow}/>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</ Content>\r\n\t\t</div>\r\n\t);\r\n};\r\n","/** Display content for Users page*/\r\nimport React, { useEffect } from 'react';\r\n// import s from './Users.module.css';\r\nimport {Users} from './Users';\r\nimport { useSelector } from 'react-redux';\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport { getIsFetching } from '../../redux/users-selectors';\r\nimport { selectIsAuth } from '../../redux/auth-selectors';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\n/** Display content for Users page*/\r\nconst UsersPage : React.FC = () =>{\r\n\r\n\tconst isFetching = useSelector(getIsFetching);\r\n\tlet isAuth = useSelector(selectIsAuth);\r\n\tlet navigate = useNavigate();\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!isAuth) {\r\n\t\t\tnavigate(\"/login\");\r\n\t\t}\r\n\t\t}, []);\r\n\r\n\r\n\treturn <>\r\n\t\t\t<div>\r\n\t\t\t\t<h2>People you may know</h2>\r\n\t\t\t\t{isFetching ? <Preloader /> : null}\r\n\t\t\t\t<Users />\r\n\t\t\t</div>\r\n\t\t</>\r\n}\r\n\r\nexport default UsersPage;"],"names":["_ref","user","followingInProgress","follow","unfollow","_jsxs","className","s","userCard","children","NavLink","to","id","_jsx","src","photos","small","userPhoto","alt","userCardName","name","userCardText","userCardStatus","status","userFollow","followed","disabled","some","onClick","getUsers","createSelector","state","usersPage","users","filter","u","getPageSize","pageSize","getTotalUsersCount","totalUsersCount","getCurrentPage","currentPage","getIsFetching","isFetching","getFollowingInProgress","getUsersFilter","props","useSelector","register","handleSubmit","formState","errors","useForm","defaultValues","term","friend","String","onSubmit","formData","onFilterChanged","data","type","maxLength","value","message","style","padding","display","Users","dispatch","useDispatch","useEffect","searchParams","get","page","actualPage","actualFilter","Number","requestUsers","navigate","useNavigate","concat","location","useLocation","useSearchParams","search","UI_follow","userId","UI_unfollow","Content","textAlign","minHeight","borderRadius","UserSearchForm","ConfigProvider","theme","components","Pagination","itemActiveBg","defaultCurrent","total","showSizeChanger","onChange","numberPage","map","User","UsersPage","isAuth","selectIsAuth","_Fragment","Preloader"],"sourceRoot":""}