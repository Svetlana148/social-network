{"version":3,"sources":["utils/Validators/validators.js","components/FormsControls/FormsControls.module.css","components/FormsControls/FormsControls.js","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["required","value","maxLengthCreator","maxLength","length","concat","module","exports","Textarea","_ref","input","meta","props","haveError","touched","error","React","createElement","className","s","formControl","Object","assign","Element","_ref3","typeElement","createForm","placeholder","name","validate","component","arguments","undefined","text","Field","Post","item","src","alt","message","likesCount","MyPosts","memo","postsElement","postsData","map","p","myPosts","AddNewPostForm","onSubmit","values","addPost","newPostText","posts","maxLength10","reduxForm","form","handleSubmit","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","ProfileStatusWithHooks","editMode","setEditMode","useState","status","setStatus","useEffect","onDoubleClick","activateEditMode","onChange","e","currentTarget","autoFocus","onBlur","deactivateEditMode","updateStatus","ProfileInfo","profile","img1","discription","photos","large","Preloader","Profile","store","ProfileContainer","Component","componentDidMount","userId","this","match","params","authorizedUserId","getUserProfile","getStatus","render","compose","auth","isAuth","location","useLocation","navigate","useNavigate","useParams","router"],"mappings":"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","file":"static/js/4.2cf49213.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nexport const required = value => {\r\n\tif (value) return undefined;\r\n\treturn \"Field is required\";\r\n}\r\n\r\n\r\nexport const maxLengthCreator = (maxLength) => (value )=> {\r\n\tif (value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n\treturn undefined;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__1sLW_\",\"error\":\"FormsControls_error__Mmyin\",\"formSummaryError\":\"FormsControls_formSummaryError__3xloe\"};","import React from 'react';\r\nimport s from './FormsControls.module.css';\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\n\r\n\r\n//Container for Textarea---------------------------------------------\r\nexport const Textarea = ({input, meta, ...props}) =>{\r\n\tlet haveError = meta.touched && meta.error;\r\n\treturn (\r\n\t\t<div className={s.formControl + \" \" + (haveError ? s.error : \" \")}>\r\n\t\t\t<div>\r\n\t\t\t\t<textarea {...input} {...props}/>\r\n\t\t\t</div>\r\n\t\t\t\t{ haveError && <span>{meta.error}</span>}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\n//Container for Input---------------------------------------------\r\nexport const Input = ({input, meta, ...props}) =>{\r\n\tlet haveError = meta.touched && meta.error;\r\n\treturn (\r\n\t\t<div className={s.formControl + \" \" + (haveError ? s.error : \" \")}>\r\n\t\t\t<div>\r\n\t\t\t\t<input {...input} {...props}/>\r\n\t\t\t</div>\r\n\t\t\t\t{ haveError && <span>{meta.error}</span>}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n//Container Universal  for Input and Textarea---------------------------------------------\r\n\r\nexport const Element = ({input, meta, ...props}) =>{\r\n\tlet haveError = meta.touched && meta.error;\r\n\r\n\treturn (\r\n\t\t<div className={s.formControl + \" \" + (haveError ? s.error : \" \")}>\r\n\t\t\t<div>\r\n\t\t\t\t<props.typeElement {...input} {...props} />\r\n\t\t\t</div>\r\n\t\t\t\t{ haveError && <span>{meta.error}</span>}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\nexport const createForm = (placeholder, name, validate, component, typeElement, props={}, text=\"\") =>(\r\n\t<div>\r\n\t<Field placeholder={placeholder} name={name}  validate={validate} \r\n\tcomponent={component} typeElement = {typeElement} {...props}/>{text}\r\n\t</div> \r\n)\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPosts\":\"MyPosts_myPosts__20td6\",\"posts\":\"MyPosts_posts__1TSdw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1x7ej\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img1\":\"ProfileInfo_img1__2A6Cf\",\"discription\":\"ProfileInfo_discription__3Qyyo\"};","import React from 'react';\r\nimport s from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n\treturn (\r\n\t\t<div className={s.item}>\r\n\t\t\t<img src=\"https://img.freepik.com/free-photo/portrait-of-shocked-brunet-european-man-stares-surprisingly-at-camera-keeps-eyes-widely-opened-wears-round-spectacles-and-sweater-sees-something-breathtaking-isolated-over-beige-studio-background_273609-56718.jpg?size=626&ext=jpg&ga=GA1.2.453830856.1690201513&semt=sph\" alt=\"\" />\r\n\t\t\t{props.message}\r\n\t\t\t<div>\r\n\t\t\t\tlikes \r\n\t\t\t\t{props.likesCount}\r\n\t\t\t</div>\r\n\t\t</div >\r\n\t);\r\n\r\n}\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post.jsx';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { required, maxLengthCreator} from '../../../utils/Validators/validators';\r\nimport { Textarea} from '../../FormsControls/FormsControls.js';\r\n\r\n//import { Form } from 'react-router-dom';\r\n// import {updateNewPostText} from './MyPostsContainer';\r\n\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n\tlet postsElement = props.postsData.map(p => \r\n\t\t\t\t\t\t\t<Post message={p.message} likesCount={p.likesCount} />);\r\n\r\n// ---------ref----------------------------------------------\t\t\t\t\r\n\t//let newPostElement = React.createRef();\r\n\r\n// ---------addPost----Redux-Form-------------------------------------\r\n\tlet addPost = (values)=>{\r\n\t\tprops.addPost(values.newPostText);\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<div className={s.myPosts}>\r\n\t\t\t<h3>My posts:</h3>\r\n\t\t\t<AddNewPostForm onSubmit={addPost}/>\r\n\t\t\t\r\n\t\t\t<div className={s.posts}>\r\n\t\t\t\t{postsElement}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n});\r\n\r\n\r\n\r\n\r\n\r\n// ---Redux-Form-----------------------------------------------------------------------\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\n\r\nconst AddNewPost = (props)=>{\r\n\treturn(\r\n\t\t<form onSubmit ={props.handleSubmit}>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Field component={Textarea}\r\n\t\t\t\t\t\tname={\"newPostText\"}\r\n\t\t\t\t\t\tvalidate={[ required, maxLength10]}\r\n\t\t\t\t\t\tplaceholder={\"Enter your post\"}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<button>Add post</button>\r\n\r\n\r\n\t\t\t\t\t<button>Remove</button>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</form>\r\n\t)\r\n}\r\n\r\nconst AddNewPostForm = reduxForm({\r\n\tform:\"ProfileNewPostText\"\r\n})(AddNewPost)\r\n\r\n\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator, updateNewPostTextActionCreator} from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\n\r\n// const MyPostsContainer = (props) => {\r\n\r\n// \tlet state = props.store.getState();\r\n\r\n// // onChange-----------------------------------------\r\n// \tlet onPostChange = (text)=>{\r\n// \t\tlet action = updateNewPostTextActionCreator(text); // делаем action\r\n// \t\tprops.store.dispatch(action)                             // dispatch - обрабатываем\r\n// \t} \r\n// // addPost-----------------------------------------\r\n// \tlet addPost = ()=>{\r\n// \t\tprops.store.dispatch(addPostActionCreator());           // делаем action  и обрабатываем\r\n// \t}\r\n// // -----------------------------------------\r\n\r\n// \treturn (\r\n// \t\t<MyPosts updateNewPostText = {onPostChange} addPost={addPost} postsData = {state.profilePage.postsData} newPostText = {state.profilePage.newPostText}/>\r\n// \t)\r\n\r\n// }\r\n\r\n\r\n\r\n\r\n\tlet mapStateToProps = (state)=>{\r\n\t\treturn {\r\n\t\t\tpostsData : state.profilePage.postsData,\r\n\t\t\tnewPostText : state.profilePage.newPostText,\r\n\t\t}\r\n\t};\r\n\r\n\tlet mapDispatchToProps = (dispatch)=>{\r\n\t\treturn {\r\n\t\t\t// updateNewPostText : (text)=>{\r\n\t\t\t// \tlet action = updateNewPostTextActionCreator(text); // делаем action\r\n\t\t\t// \tdispatch(action);                     \r\n\t\t\t// },\r\n\r\n\t\t\taddPost : (newPostText)=>{\r\n\t\t\t\tdispatch(addPostActionCreator(newPostText)); \r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\n\t\r\n\r\n\r\n\r\nexport default MyPostsContainer;","import React, {useState, useEffect} from 'react';\r\n\r\n//import s from './ProfileStatus.module.css';\r\n\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\t\r\n\t//В [0] сидит editMode, в [1] ф-ция, меняющая editMode\r\n\tlet [editMode, setEditMode] = useState(false);\r\n\tlet [status, setStatus] = useState(props.status);\r\n\r\n\tuseEffect (() =>{\r\n\t\tsetStatus(props.status);\r\n\t\t}, [props.status]\r\n\t);\r\n\r\n\tconst activateEditMode = () =>{\r\n\tsetEditMode(true);\r\n\t}\r\n\r\n\tconst deactivateEditMode = () =>{\r\n\t\tsetEditMode(false);\r\n\r\n\t\t// отправляем status на сервак\r\n\t\tprops.updateStatus(status);\r\n\t\t}\r\n\t\r\n\r\n\r\n\tconst onStatusChange = (e) =>{\r\n\t\tsetStatus(e.currentTarget.value);\r\n\t\t}\r\n\t\r\n\r\n\r\n\r\n\r\n\t\treturn (\r\n\t\t\t<div> \r\n\t\t\t\t{!editMode &&\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<span onDoubleClick={activateEditMode}>{props.status || \"----------\"}</span>\r\n\t\t\t\t\t</div>\t\t\t\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\t{editMode &&\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<input  onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\t\t\t\r\n\t\t\t\t}\r\n\r\n\t\t\t</div>\r\n\t\t); \r\n\t\r\n}\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from '../../common/preloader/Preloader';\r\n// import ProfileStatus from './ProfileStatus';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks.jsx';\r\n\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n\tif (!props.profile){\r\n\t\treturn <Preloader />\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className={s.img1}>\r\n\t\t\t\t<img src='https://img.freepik.com/free-photo/tropical-beach_74190-188.jpg' alt='' />\r\n\t\t\t</div>\t\t\t\r\n\r\n\r\n\t\t\t<div className={s.discription}> \r\n\t\t\t\t<img src={props.profile.photos.large} alt='' />\r\n\t\t\t\t<ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus }/>\r\n\t\t\t\t\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t); \r\n}\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer.jsx';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo.jsx';\r\n// import Post from './MyPosts/Post/Post.jsx'\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<ProfileInfo profile = {props.profile} status = {props.status}\r\n\t\t\tupdateStatus = {props.updateStatus}\r\n\t\t\t/> \r\n\t\t\t<MyPostsContainer store = {props.store}/>\r\n\r\n\t\t</div>\r\n\t);\r\n}\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile.jsx';\r\nimport {connect} from 'react-redux';\r\nimport {getUserProfile, getStatus, updateStatus} from '../../redux/profile-reducer.js';\r\n// import { useParams } from 'react-router-dom'; \r\nimport { compose } from 'redux';\r\nimport {  useLocation, useNavigate, useParams } from \"react-router-dom\";\r\n import { useEffect } from \"react\";\r\n\r\n\r\n\r\n\r\n// export function withRouter(Children){\r\n// \treturn(props)=>{\r\n\r\n// \t\tconst match  = {params: useParams()};\r\n// \t\treturn <Children {...props}  match = {match}/>\r\n// \t}\r\n// }\r\n\r\n\r\n\r\nclass ProfileContainer extends React.Component{\r\n\r\n\tcomponentDidMount(){\r\n\t\tlet userId = this.props.match.params.userId;\r\n\t\tif (!userId){\r\n\t\t\tuserId=this.props.authorizedUserId;\r\n\t\t\t// if (!userId){\r\n\r\n\t\t\t// \tconst history = useHistory();\r\n\t\t\t// \thistory.push(\"/Login\")\r\n\t\t\t// }\r\n\t\t}\r\n\t\t\r\n\t\tthis.props.getUserProfile(userId);\r\n\t\tthis.props.getStatus(userId);\r\n\t}\r\n\r\n\r\n\trender(){\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Profile {...this.props} profile = {this.props.profile} status = {this.props.status} updateStatus = {this.props.updateStatus}/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\nlet mapStateToProps = (state)=>({\r\n\tprofile : state.profilePage.profile,\r\n\tstatus : state.profilePage.status,\r\n\tauthorizedUserId : state.auth.userId,\r\n\tisAuth : state.auth.isAuth\r\n\t\r\n});\r\n\r\n//export default connect(mapStateToProps, {getUserProfile})(WithUrlDataContainerComponent);\r\n\r\n\r\n\r\n\r\nfunction withRouter(Component) {\r\n\tfunction ComponentWithRouterProp(props) {\r\n\t  let location = useLocation();\r\n\t  let navigate = useNavigate();\r\n\t  let params = useParams();\r\n\r\n\t  useEffect(() => {\r\n      if (!props.isAuth) {\r\n        navigate(\"/login\");\r\n      }\r\n    }, [props.isAuth, navigate]);\r\n\r\n\t const match  = {params: useParams()};\r\n\r\n\t  return (\r\n\t\t <Component\r\n\t\t\t{...props}\r\n\t\t\trouter={{ location, navigate, params }} \r\n\t\t\tmatch = {match}\r\n\t\t />\r\n\t  );\r\n\t}\r\n \r\n\treturn ComponentWithRouterProp;\r\n }\r\n\r\n\r\n\r\n\r\nexport default compose(\r\n\tconnect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n\twithRouter,\r\n)(ProfileContainer);"],"sourceRoot":""}