{"version":3,"file":"static/js/957.f69e0ecf.chunk.js","mappings":"kMAWA,MAAMA,EAAK,IAAIC,UAAU,gEAUnBC,EAAiBA,MAItBC,EAAAA,EAAAA,YAAU,KACJH,EAAGI,iBAAiB,WAAYC,IAChCC,QAAQC,IAAIF,EAAE,GAAE,GACd,IAEH,IAAIG,GAASC,EAAAA,EAAAA,IAAYC,EAAAA,GACrBC,GAAWC,EAAAA,EAAAA,MASpB,OAPKT,EAAAA,EAAAA,YAAU,KACJK,GACJG,EAAS,SACV,GACG,KAGFE,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACNC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,4BACJC,EAAAA,EAAAA,KAACC,EAAQ,KACTD,EAAAA,EAAAA,KAACE,EAAkB,MACd,EAMDD,EAAqBA,KAC1B,MAAME,EAAU,CAAC,EAAG,EAAG,EAAG,GAC1B,OAAOL,EAAAA,EAAAA,MAAA,OAAKM,MAAO,CAAEC,OAAQ,QAASC,UAAW,QAASP,SAAA,CACxDI,EAAQI,KAAKC,IAAWR,EAAAA,EAAAA,KAAES,EAAO,MACjCN,EAAQI,KAAKC,IAAWR,EAAAA,EAAAA,KAAES,EAAO,MACjCN,EAAQI,KAAKC,IAAWR,EAAAA,EAAAA,KAAES,EAAO,MAAK,aAElC,EAIDA,EAAoBA,KACzB,MAAMN,EACA,mCADAA,EAEG,OAFHA,EAGC,iBAEP,OAAOL,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACNC,EAAAA,EAAAA,KAAA,OAAKU,IAAKP,EAAaQ,IAAI,MAAIX,EAAAA,EAAAA,KAAA,KAAAD,SAAII,KACnCH,EAAAA,EAAAA,KAAA,SAAOG,GACPH,EAAAA,EAAAA,KAAA,WACK,EAMDE,EAA+BA,KAC7BJ,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACNC,EAAAA,EAAAA,KAAA,gBACAA,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,YAIV,EAtE2Ba,KACnBZ,EAAAA,EAAAA,KAAA,OAAAD,UACNC,EAAAA,EAAAA,KAACb,EAAI,K","sources":["pages/Chat/ChatPage.tsx"],"sourcesContent":["/** Display and add data for Chat page*/\r\nimport React, { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectIsAuth } from '../../redux/auth-selectors';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\n/** Structure: ChatPage(Chat(Messages, ChatMessageAddForm))*/\r\n\r\n\r\n/** Create a \"WebSocket\" channel for the application */\r\nconst ws = new WebSocket('wss://social-network.samuraijs.com/handlers/ChatHandler.ashx')\r\n\r\n/** interacts with API, Redux, Store... (i.e. it is like a container) */\r\nconst ChatPage: React.FC = () => {\r\n\treturn <div>\r\n\t\t<Chat />\r\n\t</div>\r\n}\r\n\r\n\r\nconst Chat: React.FC = () => {\r\n\r\n\t/** Synchronize with \"WebSocket\" at the 1st initialization \"render\"\r\n\t * Hang the event handler on \"WebSocket\"*/\r\n\tuseEffect(() => { \r\n\t\t\t\t\t\t\tws.addEventListener('message', (e) => { \r\n\t\t\t\t\t\t\tconsole.log(e)})\r\n\t\t\t\t\t\t}, []\t)\r\n\r\n\t\t\t\t\t\tlet isAuth = useSelector(selectIsAuth);\r\n\t\t\t\t\t\tlet navigate = useNavigate();\r\n\t\t\t\t\t\r\n\t\t\t\t\t\tuseEffect(() => {\r\n\t\t\t\t\t\t\tif (!isAuth) {\r\n\t\t\t\t\t\t\t\tnavigate(\"/login\");\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}, []);\r\n\r\n\r\n\treturn <div>\r\n\t\t<h2>Chat is in development</h2>\r\n\t\t<Messages />\r\n\t\t<ChatMessageAddForm />\r\n\t</div>\r\n}\r\n\r\n\r\n\r\n/** Renders a list of Messages*/\r\nconst Messages: React.FC = () => {\r\n\tconst message = [1, 2, 3, 4];\r\n\treturn <div style={{ height: '400px', overflowY: 'auto' }}>\r\n\t\t{message.map((m: any) => < Message />)}\r\n\t\t{message.map((m: any) => < Message />)}\r\n\t\t{message.map((m: any) => < Message />)}\r\n\t\tMessages\r\n\t</div>\r\n}\r\n\r\n/** Renders 1 Message*/\r\nconst Message: React.FC = () => {\r\n\tconst message = {\r\n\t\turl: '\thttps://via.placeholder.com/30',\r\n\t\tauther: \"Dima\",\r\n\t\ttext: \"Hallo everyone\"\r\n\t}\r\n\treturn <div>\r\n\t\t<img src={message.url} alt=''/><b>{message.auther}</b>\r\n\t\t<br />{message.text}\r\n\t\t<hr />\r\n\t</div>\r\n\r\n}\r\n\r\n\r\n/** A form adding a message to the chat*/\r\nconst ChatMessageAddForm: React.FC = () => {\r\n\treturn <div>\r\n\t\t<textarea ></textarea>\r\n\t\t<button>Send</button>\r\n\t</div>\r\n}\r\n\r\nexport default ChatPage;"],"names":["ws","WebSocket","Chat","useEffect","addEventListener","e","console","log","isAuth","useSelector","selectIsAuth","navigate","useNavigate","_jsxs","children","_jsx","Messages","ChatMessageAddForm","message","style","height","overflowY","map","m","Message","src","alt","ChatPage"],"sourceRoot":""}