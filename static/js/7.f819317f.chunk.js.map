{"version":3,"sources":["utils/Validators/validators.js","components/FormsControls/FormsControls.module.css","components/FormsControls/FormsControls.js","components/Login/Login.jsx"],"names":["required","value","maxLengthCreator","maxLength","length","concat","module","exports","Textarea","_ref","input","meta","props","haveError","touched","error","React","createElement","className","s","formControl","Object","assign","Element","_ref3","typeElement","createForm","placeholder","name","validate","component","arguments","undefined","text","Field","LoginReduxForm","reduxForm","form","handleSubmit","onSubmit","type","formSummaryError","connect","state","isAuth","auth","login","Navigate","to","formData","email","password","rememberMe"],"mappings":"kHAAA,yEAGO,MAAMA,EAAWC,IACvB,IAAIA,EACJ,MAAO,qBAIKC,EAAoBC,GAAeF,IAC/C,GAAIA,GAASA,EAAMG,OAASD,EAAW,MAAM,iBAANE,OAAwBF,EAAS,c,oBCTzEG,EAAOC,QAAU,CAAC,YAAc,mCAAmC,MAAQ,6BAA6B,iBAAmB,0C,iCCD3H,oJAOO,MAAMC,EAAWC,IAA6B,IAA5B,MAACC,EAAK,KAAEC,KAASC,GAAMH,EAC3CI,EAAYF,EAAKG,SAAWH,EAAKI,MACrC,OACCC,IAAAC,cAAA,OAAKC,UAAWC,IAAEC,YAAc,KAAOP,EAAYM,IAAEJ,MAAQ,MAC5DC,IAAAC,cAAA,WACCD,IAAAC,cAAA,WAAAI,OAAAC,OAAA,GAAcZ,EAAWE,KAEvBC,GAAaG,IAAAC,cAAA,YAAON,EAAKI,SAqBlBQ,EAAUC,IAA6B,IAA5B,MAACd,EAAK,KAAEC,KAASC,GAAMY,EAC1CX,EAAYF,EAAKG,SAAWH,EAAKI,MAErC,OACCC,IAAAC,cAAA,OAAKC,UAAWC,IAAEC,YAAc,KAAOP,EAAYM,IAAEJ,MAAQ,MAC5DC,IAAAC,cAAA,WACCD,IAAAC,cAACL,EAAMa,YAAWJ,OAAAC,OAAA,GAAKZ,EAAWE,KAEhCC,GAAaG,IAAAC,cAAA,YAAON,EAAKI,SAMlBW,EAAa,SAACC,EAAaC,EAAMC,EAAUC,EAAWL,GAAW,IAAEb,EAAKmB,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAC,GAAIE,EAAIF,UAAA3B,OAAA,QAAA4B,IAAAD,UAAA,GAAAA,UAAA,GAAC,GAAE,OAChGf,IAAAC,cAAA,WACAD,IAAAC,cAACiB,IAAKb,OAAAC,OAAA,CAACK,YAAaA,EAAaC,KAAMA,EAAOC,SAAUA,EACxDC,UAAWA,EAAWL,YAAeA,GAAiBb,IAASqB,K,iCCpDhE,8FAWA,MAkCME,EAAiBC,YAAU,CAAEC,KAAM,SAAlBD,CAlCL3B,IAA8B,IAA7B,aAAE6B,EAAY,MAAEvB,GAAON,EACzC,OACCO,IAAAC,cAAA,QAAMsB,SAAUD,GAEdZ,YAAW,QAAS,QAAS,CAAC1B,KAAWuB,IAAS,SAKlDG,YAAW,WAAY,WAAY,CAAC1B,KAAWuB,IAAS,QAAS,CAAEiB,KAAM,aAKzEd,YAAW,KAAM,aAAc,GAAIH,IAAS,QAAS,CAAEiB,KAAM,YAAc,eAK3EzB,GAASC,IAAAC,cAAA,OAAKC,UAAWC,IAAEsB,kBAC1B1B,GAEFC,IAAAC,cAAA,WACCD,IAAAC,cAAA,cAAQ,aAwCGyB,sBALUC,IAAK,CAC7BC,OAAQD,EAAME,KAAKD,SAIoB,CAAEE,WAA3BJ,CAxBA9B,GAMVA,EAAMgC,OAEF5B,IAAAC,cAAC8B,IAAQ,CAACC,GAAK,aAItBhC,IAAAC,cAAA,WACCD,IAAAC,cAAA,UAAI,UACJD,IAAAC,cAACkB,EAAc,CAACI,SAbAU,IAEjBrC,EAAMkC,MAAMG,EAASC,MAAOD,EAASE,SAAUF,EAASG","file":"static/js/7.f819317f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nexport const required = value => {\r\n\tif (value) return undefined;\r\n\treturn \"Field is required\";\r\n}\r\n\r\n\r\nexport const maxLengthCreator = (maxLength) => (value )=> {\r\n\tif (value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n\treturn undefined;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__1sLW_\",\"error\":\"FormsControls_error__Mmyin\",\"formSummaryError\":\"FormsControls_formSummaryError__3xloe\"};","import React from 'react';\r\nimport s from './FormsControls.module.css';\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\n\r\n\r\n//Container for Textarea---------------------------------------------\r\nexport const Textarea = ({input, meta, ...props}) =>{\r\n\tlet haveError = meta.touched && meta.error;\r\n\treturn (\r\n\t\t<div className={s.formControl + \" \" + (haveError ? s.error : \" \")}>\r\n\t\t\t<div>\r\n\t\t\t\t<textarea {...input} {...props}/>\r\n\t\t\t</div>\r\n\t\t\t\t{ haveError && <span>{meta.error}</span>}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\n//Container for Input---------------------------------------------\r\nexport const Input = ({input, meta, ...props}) =>{\r\n\tlet haveError = meta.touched && meta.error;\r\n\treturn (\r\n\t\t<div className={s.formControl + \" \" + (haveError ? s.error : \" \")}>\r\n\t\t\t<div>\r\n\t\t\t\t<input {...input} {...props}/>\r\n\t\t\t</div>\r\n\t\t\t\t{ haveError && <span>{meta.error}</span>}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n//Container Universal  for Input and Textarea---------------------------------------------\r\n\r\nexport const Element = ({input, meta, ...props}) =>{\r\n\tlet haveError = meta.touched && meta.error;\r\n\r\n\treturn (\r\n\t\t<div className={s.formControl + \" \" + (haveError ? s.error : \" \")}>\r\n\t\t\t<div>\r\n\t\t\t\t<props.typeElement {...input} {...props} />\r\n\t\t\t</div>\r\n\t\t\t\t{ haveError && <span>{meta.error}</span>}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\nexport const createForm = (placeholder, name, validate, component, typeElement, props={}, text=\"\") =>(\r\n\t<div>\r\n\t<Field placeholder={placeholder} name={name}  validate={validate} \r\n\tcomponent={component} typeElement = {typeElement} {...props}/>{text}\r\n\t</div> \r\n)\r\n\r\n","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Element, createForm } from '../FormsControls/FormsControls';\r\nimport { required, maxLengthCreator } from '../../utils/Validators/validators';\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../../redux/auth-reducer\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport s from '../FormsControls/FormsControls.module.css';\r\n\r\n\r\n//MainComponent\r\nconst LoginForm = ({ handleSubmit, error }) => {\r\n\treturn (\r\n\t\t<form onSubmit={handleSubmit}>\r\n\r\n\t\t\t{createForm(\"Email\", \"email\", [required], Element, \"input\")}\r\n\t\t\t{/* <div>\r\n\t\t\t\t<Field placeholder={\"Email\"} name={\"email\"}  validate={[required]} component={Element} typeElement = {\"input\"}/>\r\n\t\t\t</div> */}\r\n\r\n\t\t\t{createForm(\"Password\", \"password\", [required], Element, \"input\", { type: \"password\" })}\r\n\t\t\t{/* <div>\r\n\t\t\t\t<Field placeholder={\"Password\"} name={\"password\"}  validate={required}  type={\"password\"} component={Element} typeElement=\"input\" />\r\n\t\t\t</div> */}\r\n\r\n\t\t\t{createForm(null, \"rememberMe\", [], Element, \"input\", { type: \"checkbox\" }, \"remember me\")}\r\n\t\t\t{/* <div>\r\n\t\t\t\t<Field name={\"rememberMe\"}   type={\"checkbox\"}  component={Element} typeElement = \"input\"/>remember me\r\n\t\t\t</div> */}\r\n\r\n\t\t\t{error && <div className={s.formSummaryError}>\r\n\t\t\t\t{error}\r\n\t\t\t</div>}\r\n\t\t\t<div>\r\n\t\t\t\t<button>Login</button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\n\r\n//Оборачиваем эту форму hoc-ом from Redux-form---------------------------------\r\n//containerComponent send from Redux-form \"handleSubmit\" to MainComponent(LoginForm)\r\n// a unique name fo the form\r\n\r\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm)\r\n//------------------------------------------------------------------------------\r\n\r\n\r\n\r\nconst Login = (props) => {\r\n\tconst onSubmit = (formData) => {\r\n\t\t//login is here callback from connect(thunkCreater)------------------------------------\r\n\t\tprops.login(formData.email, formData.password, formData.rememberMe);\r\n\t}\r\n\r\n\tif (props.isAuth) {\r\n\t\t//Navigate вместо Redirect----------------------------------------------------\r\n\t\treturn <Navigate to={(\"/Profile\")} />\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>Login </h1>\r\n\t\t\t<LoginReduxForm onSubmit={onSubmit} />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tisAuth: state.auth.isAuth\r\n});\r\n\r\n//login is here thunkCreater------------------------------------\r\nexport default connect(mapStateToProps, { login })(Login);"],"sourceRoot":""}